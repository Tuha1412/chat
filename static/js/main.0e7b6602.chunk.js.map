{"version":3,"sources":["firebase/config.js","firebase/services.js","components/Login/Login.jsx","Context/AuthProvider.js","hooks/useFirestore.js","Context/AppProvider.js","components/ChatRoom/RoomList.jsx","components/ChatRoom/UserInfo.jsx","components/ChatRoom/Sidebar.jsx","components/ChatRoom/Message.jsx","components/ChatRoom/ChatWindow.jsx","components/ChatRoom/ChatRoom.jsx","components/Modal/AddRoomModal.jsx","components/Modal/InviteMemberModal.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","db","firestore","addDocument","collection","data","add","createdAt","FieldValue","serverTimestamp","generateKeywords","displayName","name","split","filter","word","length","flagArray","result","stringArray","i","findPermutation","k","push","join","reduce","acc","cur","words","arrName","curName","forEach","letter","createKeywords","Title","Typography","fbProvider","FacebookAuthProvider","Login","handleFbLogin","a","signInWithPopup","additionalUserInfo","user","isNewUser","email","uid","photoURL","providerId","keywords","justify","style","height","span","textAlign","level","width","marginBottom","onClick","AuthContext","React","createContext","AuthProvider","children","useState","setUser","history","useHistory","isLoading","setIsLoading","useEffect","unsubcribed","onAuthStateChanged","Provider","value","useFirestore","condition","documents","setDocuments","collectionRef","compareValue","where","fieldName","operator","onSnapshot","snapshot","docs","map","doc","id","AppContext","AppProvider","isAddRoomVisible","setIsAddRoomVisible","isInviteMemberVisible","setIsInviteMemberVisible","selectedRoomId","setSelectedRoomId","useContext","roomsCondition","useMemo","rooms","console","log","selectedRoom","find","room","usersCondition","members","clearState","Panel","Collapse","PanelStyle","styled","LinkStyle","Link","RoomList","ghost","defaultActiveKey","header","type","icon","PlusSquareOutlined","className","WrapperStyle","div","UserInfo","src","charAt","toUpperCase","Text","signOut","SidebarStyles","Sidebar","formatDate","seconds","formattedDate","formatRelative","Date","toLocaleUpperCase","slice","Message","text","size","HeaderStyle","ButtonGroupStyle","MessageListStyle","ContentStyle","FormStyle","Form","ChatWindow","inputValue","setInputValue","useForm","form","handleOnSubmit","roomId","resetFields","messages","description","UserAddOutlined","Group","maxCount","member","title","message","Item","placeholder","bordered","autoComplete","onChange","e","target","onPressEnter","showIcon","margin","closable","ChatRoom","AddRoomModal","visible","onOk","getFieldValue","onCancel","layout","label","TextArea","DebounceSelect","fetchOptions","debounceTimeout","props","fetching","setFetching","options","setOptions","debounceFetcher","debounce","then","newOptions","labelInValue","filterOption","onSearch","notFoundContent","opt","Option","fetchUserList","search","orderBy","limit","get","InviteMemberModal","setValue","mode","newValue","App","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e7b6602.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/analytics';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCR2WGPzKfVJsrCNLzOdwYFPUyB-eVLNYQ\",\r\n    authDomain: \"app-chat-66ff1.firebaseapp.com\",\r\n    projectId: \"app-chat-66ff1\",\r\n    storageBucket: \"app-chat-66ff1.appspot.com\",\r\n    messagingSenderId: \"724611761415\",\r\n    appId: \"1:724611761415:web:ec0452e2aebbccb98d71a2\",\r\n    measurementId: \"G-20PED2KEEE\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\n\r\n// if (window.location.hostname === 'localhost') {\r\n//     auth.useEmulator('http://localhost:9099');\r\n//     db.useEmulator('localhost', '8080')\r\n// }\r\n\r\nexport {auth, db};\r\nexport default firebase;","import firebase, { db } from './config';\r\n\r\nexport const addDocument = (collection, data) => {\r\n    const query = db.collection(collection);\r\n\r\n    query.add({\r\n        ...data,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n    })\r\n}\r\n\r\n// tao keywords cho displayName, su dung cho search\r\nexport const generateKeywords = (displayName) => {\r\n    // liet ke tat cac hoan vi. vd: name = [\"David\", \"Van\", \"Teo\"]\r\n    // => [\"David\", \"Van\", \"Teo\"], [\"David\", \"Teo\", \"Van\"], [\"Teo\", \"David\", \"Van\"],...\r\n    const name = displayName.split(' ').filter((word) => word);\r\n\r\n    const length = name.length;\r\n    let flagArray = [];\r\n    let result = [];\r\n    let stringArray = [];\r\n\r\n    /**\r\n     * khoi tao mang flag false\r\n     * dung de danh dau xem gia tri\r\n     * tai vi tri nay da duoc su dung\r\n     * hay chua\r\n     **/\r\n    for (let i = 0; i < length; i++) {\r\n        flagArray[i] = false;\r\n    }\r\n\r\n    const createKeywords = (name) => {\r\n        const arrName = [];\r\n        let curName = '';\r\n        name.split('').forEach((letter) => {\r\n            curName += letter;\r\n            arrName.push(curName);\r\n        });\r\n        return arrName;\r\n    };\r\n\r\n    function findPermutation(k) {\r\n        for (let i = 0; i < length; i++) {\r\n            if (!flagArray[i]) {\r\n                flagArray[i] = true;\r\n                result[k] = name[i];\r\n\r\n                if (k === length - 1) {\r\n                    stringArray.push(result.join(' '));\r\n                }\r\n\r\n                findPermutation(k + 1);\r\n                flagArray[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    findPermutation(0);\r\n\r\n    const keywords = stringArray.reduce((acc, cur) => {\r\n        const words = createKeywords(cur);\r\n        return [...acc, ...words];\r\n    }, []);\r\n\r\n    return keywords;\r\n};","import React from 'react';\r\nimport {Row, Col, Button, Typography} from 'antd';\r\nimport firebase, {auth} from '../../firebase/config';\r\nimport { addDocument, generateKeywords } from '../../firebase/services';\r\n\r\nconst {Title} = Typography;\r\n\r\nconst fbProvider = new firebase.auth.FacebookAuthProvider();\r\n\r\nexport default function Login() {\r\n\r\n    const handleFbLogin = async () => {\r\n        const {additionalUserInfo, user} = await auth.signInWithPopup(fbProvider);\r\n\r\n        if (additionalUserInfo?.isNewUser){\r\n            addDocument('users', {           \r\n                displayName: user.displayName,\r\n                email: user.email,\r\n                uid: user.uid   ,\r\n                photoURL: user.photoURL,\r\n                providerId: additionalUserInfo.providerId,\r\n                keywords: generateKeywords(user.displayName)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    return (\r\n\r\n        <div>\r\n            <Row justify=\"center\" style={{height: 800}}>\r\n                <Col span={8}>\r\n                    <Title style={{textAlign: 'center'}} level={3}>Chat</Title>\r\n                    <Button style={{width: '100%', marginBottom: 5}}>Đăng nhập bằng Google</Button>\r\n                    <Button style={{width: '100%'}} onClick={handleFbLogin}>Đăng nhập bằng Facebook</Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Spin } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {auth} from '../firebase/config';\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport default function AuthProvider({children}) {\r\n\r\n\r\n    const [user, setUser] = useState({});\r\n    const history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    useEffect(() => {\r\n        const unsubcribed = auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                const {displayName, email, uid, photoURL} = user;\r\n                setUser({displayName, email, uid, photoURL});\r\n                setIsLoading(false);\r\n                history.push('/');\r\n                return;\r\n            }\r\n            \r\n            setIsLoading(false);\r\n            history.push('/login');\r\n            //history.push('/');\r\n        });\r\n\r\n        //clean function\r\n\r\n        return () => {\r\n            unsubcribed();\r\n        }\r\n\r\n    }, [history]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{user}}>\r\n            {isLoading ? <Spin/> : children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport {db} from '../firebase/config';\r\n\r\n\r\nconst useFirestore = (collection, condition) => {\r\n\r\n    const [documents, setDocuments] = useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let collectionRef = db.collection(collection)//.orderBy('createdAt');\r\n        // condition\r\n        if (condition) {\r\n            if (!condition.compareValue || !condition.compareValue.length){\r\n                setDocuments([]);\r\n                return;\r\n            } \r\n            collectionRef = collectionRef.where(condition.fieldName, condition.operator, condition.compareValue);\r\n        }\r\n        \r\n        const unsubcribed = collectionRef.onSnapshot((snapshot) => {\r\n            const documents = snapshot.docs.map(doc => ({\r\n                ...doc.data(),\r\n                id: doc.id\r\n            }));\r\n\r\n            setDocuments(documents);\r\n        });\r\n\r\n        return unsubcribed;\r\n    }, [collection, condition]);\r\n    \r\n    return documents;\r\n}\r\n\r\nexport default useFirestore;","import React, {useState, useContext, useMemo} from 'react';\r\nimport { AuthContext } from './AuthProvider';\r\nimport useFirestore from '../hooks/useFirestore';\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nexport default function AppProvider({children}) {\r\n\r\n    const [isAddRoomVisible, setIsAddRoomVisible] = useState(false);\r\n    const [isInviteMemberVisible, setIsInviteMemberVisible] = useState(false)\r\n    const [selectedRoomId, setSelectedRoomId] = useState('');\r\n    const {user: {uid}} = useContext(AuthContext);\r\n    \r\n    const roomsCondition = React.useMemo(() => {\r\n        return {\r\n            fieldName: 'members',\r\n            operator: 'array-contains',\r\n            compareValue: uid\r\n        }\r\n    }, [uid]);\r\n\r\n    const rooms = useFirestore('rooms', roomsCondition);\r\n\r\n    console.log(rooms);\r\n\r\n    const selectedRoom = useMemo(() => rooms.find(room => room.id === selectedRoomId) || {}, [rooms, selectedRoomId]);\r\n    //console.log(selectedRoom);\r\n\r\n    const usersCondition = React.useMemo(() => {\r\n        return {\r\n            fieldName: 'uid',\r\n            operator: 'in',\r\n            compareValue: selectedRoom.members,\r\n        }\r\n    }, [selectedRoom.members]);\r\n\r\n    const members = useFirestore('users', usersCondition);\r\n    const clearState = () => {\r\n        setSelectedRoomId('');\r\n        setIsAddRoomVisible(false);\r\n        setIsInviteMemberVisible(false);\r\n      };\r\n    //console.log({members});\r\n    \r\n    return (\r\n        <AppContext.Provider value={{rooms,\r\n                                    isAddRoomVisible, \r\n                                    setIsAddRoomVisible, \r\n                                    selectedRoomId, \r\n                                    setSelectedRoomId,\r\n                                    selectedRoom,\r\n                                    members,\r\n                                    isInviteMemberVisible,\r\n                                    setIsInviteMemberVisible,\r\n                                    clearState,\r\n        }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Collapse, Typography, Button } from 'antd';\r\nimport styled from 'styled-components';\r\nimport {PlusSquareOutlined} from '@ant-design/icons';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nconst {Panel} = Collapse;\r\n\r\nconst PanelStyle = styled(Panel)`\r\n    &&& {\r\n        .ant-collapse-header, p{\r\n            color: white\r\n        }\r\n        .ant-collapse-content-box{\r\n            padding: 0 40px;\r\n        }\r\n        .add-room{\r\n            color: white;\r\n            padding: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nconst LinkStyle = styled(Typography.Link)`\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    color: white;\r\n`;\r\n\r\nexport default function RoomList() {\r\n\r\n    const {rooms, setIsAddRoomVisible, setSelectedRoomId} = useContext(AppContext);\r\n\r\n    const handleAddRoom = () => {\r\n        setIsAddRoomVisible(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <Collapse ghost defaultActiveKey={['1']}>\r\n            <PanelStyle  header=\"Danh sách các phòng\" key=\"1\">\r\n                {\r\n                    rooms.map(room => {\r\n                        return <LinkStyle onClick={() => setSelectedRoomId(room.id)}  key={room.id}>{room.name}</LinkStyle>\r\n                    })\r\n                }\r\n                <Button type=\"text\" onClick={handleAddRoom} icon={<PlusSquareOutlined />} className=\"add-room\">Thêm phòng</Button>\r\n            </PanelStyle>\r\n        </Collapse>\r\n    )\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {Button, Avatar, Typography} from 'antd';\r\nimport styled from 'styled-components';\r\nimport {auth} from '../../firebase/config';\r\nimport {AuthContext} from '../../Context/AuthProvider';\r\nconst WrapperStyle = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 12px 16px;\r\n    border-bottom: 1px solid rgba(82, 38, 83);\r\n\r\n    .username {\r\n        color: white;\r\n        margin-left: 5px;\r\n    }\r\n`;\r\n\r\n\r\nexport default function UserInfo() {\r\n\r\n    const {\r\n        user:{\r\n            displayName,\r\n            photoURL\r\n        }\r\n    } = useContext(AuthContext);\r\n    \r\n\r\n    return (\r\n        <WrapperStyle>\r\n            <div>\r\n                <Avatar src={photoURL}>{photoURL ? '' : displayName?.charAt(0).toUpperCase()}</Avatar>\r\n                <Typography.Text className=\"username\">{displayName}</Typography.Text>\r\n            </div>\r\n            <Button ghost onClick={() => auth.signOut()}>Đăng xuất</Button>\r\n        </WrapperStyle>\r\n    )\r\n}\r\n","import { Col, Row } from 'antd';\r\nimport React from 'react';\r\nimport RoomList from './RoomList';\r\nimport UserInfo from './UserInfo';\r\nimport styled from 'styled-components';\r\n\r\nconst SidebarStyles = styled.div`\r\n    background: #3f0e40;\r\n    color: white;\r\n    height: 100vh;\r\n`;\r\n\r\nexport default function Sidebar() {\r\n    return (\r\n        <SidebarStyles>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <UserInfo />\r\n                </Col>\r\n                <Col span={24}>\r\n                    <RoomList />\r\n                </Col>\r\n            </Row>\r\n        </SidebarStyles>\r\n    )\r\n}\r\n","import { Avatar, Typography } from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport {formatRelative} from 'date-fns';\r\nconst WrapperStyle = styled.div`\r\n    margin-bottom: 10px; \r\n    \r\n    .author{\r\n        margin-left: 5px;\r\n        font-weight: bold;\r\n    }\r\n    .date{\r\n        margin-left: 10px;\r\n        font-size: 11px;\r\n        color: #a7a7a7;\r\n    }\r\n    .content{\r\n        margin-left: 40px;\r\n    }\r\n`;\r\n\r\nfunction formatDate(seconds) {\r\n    let formattedDate = '';\r\n    if (seconds) {\r\n        formattedDate = formatRelative(new Date(seconds * 1000), new Date());\r\n        formattedDate = formattedDate.charAt(0).toLocaleUpperCase() + formattedDate.slice(1);\r\n    }\r\n\r\n    return formattedDate;\r\n}\r\n\r\nexport default function Message({text, displayName, createdAt, photoURL}) {\r\n\r\n\r\n\r\n    return (\r\n        <WrapperStyle>\r\n            <div>\r\n                <Avatar size=\"small\" src={photoURL}>\r\n                    {photoURL ? '' : displayName.charAt(0)?.toLocaleUpperCase()}\r\n                </Avatar>\r\n                <Typography.Text className=\"author\">{displayName}</Typography.Text>\r\n                <Typography.Text className=\"date\">{formatDate(createdAt?.seconds)}</Typography.Text>\r\n            </div>\r\n            <div>\r\n                <Typography.Text className=\"content\">{text}</Typography.Text>\r\n            </div>\r\n        </WrapperStyle>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { UserAddOutlined } from '@ant-design/icons';\r\nimport { Button, Avatar, Tooltip, Form, Input, Alert } from 'antd';\r\nimport styled from 'styled-components';\r\nimport Message from './Message';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { addDocument } from '../../firebase/services';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\nimport useFirestore from '../../hooks/useFirestore';\r\n\r\n\r\nconst WrapperStyle = styled.div`\r\n    height: 100vh;\r\n`;\r\n\r\nconst HeaderStyle = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 60px;\r\n    padding: 0 16px;\r\n\r\n    border-bottom: 1px solid rgb(230, 230, 230);\r\n    \r\n    .header{\r\n        &-info{\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n        }\r\n        &-title{\r\n            margin: 0;\r\n            font-weight: bold;\r\n        }\r\n        &-description{\r\n            font-size: 13px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ButtonGroupStyle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    .btn-add{\r\n        margin: 10px;\r\n    }\r\n`;\r\n\r\nconst MessageListStyle = styled.div`\r\n    max-height: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst ContentStyle = styled.div`\r\n    height: calc(100% - 60px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 11px;\r\n    justify-content: flex-end;  \r\n`;\r\n\r\nconst FormStyle = styled(Form)`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 2px 2px 2px 0;\r\n    border: 1px solid rgba(230, 230, 230);\r\n    border-radius: 2px;\r\n\r\n    .ant-form-item{\r\n        flex: 1;\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\n\r\n\r\nexport default function ChatWindow() {\r\n\r\n    const { selectedRoom, members, setIsInviteMemberVisible } = useContext(AppContext);\r\n    const {user: {uid, photoURL, displayName}} = useContext(AuthContext);\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [form] = Form.useForm();\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n    const handleOnSubmit = () => {\r\n        addDocument('messages', {\r\n            text: inputValue,\r\n            uid,\r\n            photoURL,\r\n            roomId: selectedRoom.id,\r\n            displayName\r\n        })\r\n\r\n        form.resetFields(['message']);\r\n    }\r\n\r\n    const condition = React.useMemo(() => ({\r\n        fieldName: 'roomId',\r\n        operator: '==',\r\n        compareValue: selectedRoom.id\r\n    }), [selectedRoom.id]);\r\n\r\n    const messages =  useFirestore('messages', condition);\r\n\r\n    return (\r\n        <WrapperStyle>\r\n            {\r\n                selectedRoom.id ? (\r\n                    <>\r\n                        <HeaderStyle>\r\n                            <div className=\"header-info\">\r\n                                <p className=\"header-title\">{selectedRoom.name}</p>\r\n                                <span className=\"header-description\">{selectedRoom.description}</span>\r\n                            </div>\r\n                            <ButtonGroupStyle>\r\n                                <Button onClick={() => setIsInviteMemberVisible(true)} className=\"btn-add\" type=\"text\" icon={<UserAddOutlined />}>Mời</Button>\r\n                                <Avatar.Group size=\"small\" maxCount={2}>\r\n                                    {\r\n                                        members.map(member =>\r\n                                            <Tooltip title={member.displayName} key={member.id}>\r\n                                                <Avatar src={member.photoURL}>{member.photoURL ? '' : member.displayName?.charAt(0).toUpperCase()}</Avatar>\r\n                                            </Tooltip>)\r\n                                    }\r\n                                </Avatar.Group>\r\n                            </ButtonGroupStyle>\r\n                        </HeaderStyle>\r\n                        <ContentStyle>\r\n                            <MessageListStyle>\r\n                                {\r\n                                    messages.map((message => <Message key={message.id} text={message.text} displayName={message.displayName} photoURL={message.photoURL} createdAt={message.createdAt} />))\r\n                                }\r\n                            </MessageListStyle>\r\n                            <FormStyle form={form}>\r\n                                <Form.Item name=\"message\">\r\n                                    <Input placeholder=\"Nhập tin nhắn\" bordered={false} autoComplete=\"off\" onChange={handleInputChange} onPressEnter={handleOnSubmit} />\r\n                                </Form.Item>\r\n                                <Button type=\"primary\" onClick={handleOnSubmit}>Gửi</Button>\r\n                            </FormStyle>\r\n                        </ContentStyle>\r\n                    </>\r\n                ) : <Alert message=\"Hãy chọn phòng\" type=\"info\" showIcon style={{margin: 5}} closable/>\r\n            }\r\n        </WrapperStyle>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport ChatWindow from './ChatWindow';\r\nimport { Row, Col } from 'antd';\r\n\r\nexport default function ChatRoom() {\r\n    return (\r\n        <Row>\r\n            <Col span={6}>\r\n                <Sidebar />\r\n            </Col>\r\n            <Col span={18}>\r\n                <ChatWindow />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {Form, Input, Modal} from 'antd';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { addDocument } from '../../firebase/services';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\n\r\nexport default function AddRoomModal() {\r\n\r\n    const {isAddRoomVisible, setIsAddRoomVisible} = useContext(AppContext);\r\n    const {user: {uid}} = useContext(AuthContext);\r\n\r\n    //day la useForm trong react hooks\r\n    const [form] = Form.useForm();\r\n    const handleOk = () => {\r\n        //handle logic\r\n        //add new room to firestore\r\n\r\n        addDocument('rooms', {...form.getFieldValue(), members: [uid]});\r\n\r\n        //reset form value\r\n        form.resetFields();\r\n        \r\n        setIsAddRoomVisible(false);\r\n    }\r\n    \r\n    const handleCancel = () => {\r\n        //reset form value\r\n        form.resetFields();\r\n        setIsAddRoomVisible(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                title=\"Tạo phòng\"\r\n                visible={isAddRoomVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n            >\r\n                <Form form={form} layout=\"vertical\">\r\n                    <Form.Item label=\"Tên phòng\" name=\"name\">\r\n                        <Input placeholder=\"Nhập tên phòng\"/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Mô tả\" name=\"description\">\r\n                        <Input.TextArea placeholder=\"Nhập mô tả\"/>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState, useMemo } from 'react';\r\nimport { Avatar, Form, Modal, Select, Spin } from 'antd';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { addDocument } from '../../firebase/services';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\nimport { debounce } from 'lodash';\r\nimport { db } from '../../firebase/config';\r\n\r\n\r\nfunction DebounceSelect({ fetchOptions, debounceTimeout = 300, ...props }) {\r\n\r\n    const [fetching, setFetching] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const debounceFetcher = useMemo(() => {\r\n        const loadOptions = (value) => {\r\n            setOptions([]);\r\n            setFetching(true);\r\n\r\n            fetchOptions(value).then((newOptions) => {\r\n                setOptions(newOptions);\r\n                setFetching(false);\r\n            })\r\n        }\r\n\r\n        return debounce(loadOptions, debounceTimeout);\r\n    }, [debounceTimeout, fetchOptions]);\r\n\r\n    return (\r\n        <Select \r\n            labelInValue\r\n            filterOption={false}\r\n            onSearch={debounceFetcher}\r\n            notFoundContent={fetching ? <Spin size=\"small\" /> : null}\r\n            {...props}\r\n        >\r\n            {\r\n                // [{label, value, photoURL}]\r\n                options.map(opt => {\r\n                    <Select.Option key={opt.value} value={opt.value} title={opt.label}>\r\n                        <Avatar size=\"small\" src={opt.photoURL}>\r\n                            {opt.photoURL ? '' : opt.label?.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                        {`${opt.label}`}\r\n                    </Select.Option>\r\n                })\r\n            }\r\n        </Select>\r\n\r\n    )\r\n}\r\n\r\nasync function fetchUserList(search) {\r\n    return db.collection('users')\r\n        .where('keywords', 'array-contains', search)\r\n        .orderBy('displayName')\r\n        .limit(20)\r\n        .get()\r\n        .then(snapshot => {\r\n            return snapshot.docs.map(doc => ({\r\n                label: doc.data().displayName,\r\n                value: doc.data().uid,\r\n                photoURL: doc.data().photoURL,\r\n            }))\r\n        });\r\n}\r\n\r\n\r\nexport default function InviteMemberModal() {\r\n\r\n    const { isInviteMemberVisible, setIsInviteMemberVisible } = useContext(AppContext);\r\n    const { user: { uid } } = useContext(AuthContext);\r\n    const [value, setValue] = useState([]);\r\n    //day la useForm trong react hooks\r\n    const [form] = Form.useForm();\r\n    const handleOk = () => {\r\n        //handle logic\r\n        //add new room to firestore\r\n\r\n        addDocument('rooms', { ...form.getFieldValue(), members: [uid] });\r\n\r\n        //reset form value\r\n        form.resetFields();\r\n\r\n        setIsInviteMemberVisible(false);\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        //reset form value\r\n        form.resetFields();\r\n        setIsInviteMemberVisible(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                title=\"Thêm thành viên\"\r\n                visible={isInviteMemberVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n            >\r\n                <Form form={form} layout=\"vertical\">\r\n                    <DebounceSelect\r\n                        mode=\"multiple\"\r\n                        label=\"Tên các thành viên\"\r\n                        value={value}\r\n                        placeholder=\"Nhập tên thành viên\"\r\n                        fetchOptions={fetchUserList}\r\n                        onChange={newValue => setValue(newValue)}\r\n                        style={{ width: '100%' }}\r\n                    >\r\n                    </DebounceSelect>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Login from './components/Login/Login';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport ChatRoom from './components/ChatRoom/ChatRoom';\nimport AuthProvider from './Context/AuthProvider';\nimport AppProvider from './Context/AppProvider';\nimport AddRoomModal from './components/Modal/AddRoomModal';\nimport InviteMemberModal from './components/Modal/InviteMemberModal';\n\nfunction App() {\n\n   return (\n      <BrowserRouter>\n         <AuthProvider>\n            <AppProvider>\n               <Switch>\n                  <Route component={Login} path=\"/login\"/>\n                  <Route component={ChatRoom} path=\"/\"/>\n               </Switch>\n               <AddRoomModal/>\n               <InviteMemberModal/>\n            </AppProvider>\n         </AuthProvider>\n      </BrowserRouter>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}